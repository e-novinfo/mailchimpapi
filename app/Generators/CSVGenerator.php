<?php
/**
 * MailChimpApi - CSVGenerator
 *
 * @since       16.12.2016
 *
 * @version     1.0.0.0
 *
 * @author      e-novinfo
 * @copyright   e-novinfo 2016
 */

namespace enovinfo\MailChimpApi\Generators;

class CSVGenerator
{
    
    /********************************/
    /********** PROPERTIES **********/
    /********************************/
    
    public $data;
    public $mergeFields;
    
    private $delimter = ';';
    private $textSeparator = '"';
    private $replaceTextSeparator = "'";
    private $lineDelimiter = "\n";
    private $dataToParse;
    private $additionalFields;
    
    /*********************************************************************************/
    /*********************************************************************************/
        
    /*******************************/
    /********** CONSTRUCT **********/
    /*******************************/
    
    /*
     * @param Array $data Data to parse
     */

    public function __construct($data, $mergeFields = null)
    {
    
        if ($this->checkData($data)) {
            $this->setDataToParse($data);
        }
        
        if ($this->checkMergeFields($mergeFields)) {
            $this->setAdditionalFields($mergeFields);
        }
        
    }
    
    /*********************************************************************************/
    /*********************************************************************************/
        
    /***************************************/
    /********** GET DATA TO PARSE **********/
    /***************************************/
    
    /*
     * @return Array
     */
    
    public function getDataToParse()
    {
        return $this->dataToParse;
    }
    
    /*********************************************************************************/
    /*********************************************************************************/
        
    /*******************************************/
    /********** GET ADDITIONAL FIELDS **********/
    /*******************************************/
    
    /*
     * @return Array
     */
    
    public function getAdditionalFields()
    {
        return $this->additionalFields;
    }
    
    /*********************************************************************************/
    /*********************************************************************************/
        
    /***************************************/
    /********** SET DATA TO PARSE **********/
    /***************************************/
    
    /*
     * @param Array $dataToParse Data to parse
     * @return Void
     */
    
    private function setDataToParse($dataToParse)
    {
        $this->dataToParse = $dataToParse;
    }
    
    /*********************************************************************************/
    /*********************************************************************************/
        
    /*******************************************/
    /********** SET ADDITIONAL FIELDS **********/
    /*******************************************/
    
    /*
     * @param Array $additionalFields Additional fields
     * @return Void
     */
    
    private function setAdditionalFields($additionalFields)
    {
        $this->additionalFields = $additionalFields;
    }
    
    /*********************************************************************************/
    /*********************************************************************************/
        
    /********************************/
    /********** CHECK DATA **********/
    /********************************/
    
    /*
     * @param Array $data Data to parse
     * @return Bool
     */
    
    private function checkData($data)
    {
        if (!empty($data) && is_array($data)) {
            return true;
        } else {
            throw new \Exception('Invalid data.');
        }
        
        return false;
    }
    
    /*********************************************************************************/
    /*********************************************************************************/
        
    /****************************************/
    /********** CHECK MERGE FIELDS **********/
    /****************************************/
    
    /*
     * @param Array $mergeFields Additional fields
     * @return Bool
     */
    
    private function checkMergeFields($mergeFields)
    {
        if (!empty($mergeFields) && is_array($mergeFields)) {
            return true;
        }
        
        return false;
    }

    /*********************************************************************************/
    /*********************************************************************************/
        
    /*****************************/
    /********** PROCESS **********/
    /*****************************/
    
    /*
     * @return Bool
     */
    
    public function process()
    {
        
    }
    
    /*********************************************************************************/
    /*********************************************************************************/
    
    /**********************************/
    /********** CONVERT DATA **********/
    /**********************************/
    
    private function convertData() 
    {
        
    }
    
    /*********************************************************************************/
    /*********************************************************************************/
    
    /**********************************/
    /********** CONVERT LINE **********/
    /**********************************/
    
    private function convertLine() 
    {
        
    }
    
    /*********************************************************************************/
    /*********************************************************************************/
    
    /***********************************/
    /********** GENERATE FILE **********/
    /***********************************/
    
    /*
     * @return Bool
     */
    
    private function generateFile() {
        
    }
      
}
